FROM ubuntu:24.04

# Install required dependencies
RUN apt-get update && apt-get install -y \
    git build-essential ninja-build pkg-config python3 python3-pip \
    libpcre3-dev libglib2.0-dev \
    ca-certificates wget tar curl \
    gcc g++ \
    gcc-aarch64-linux-gnu g++-aarch64-linux-gnu \
    && rm -rf /var/lib/apt/lists/*

# Install Python tomli for QEMU's configure script
#RUN python3 -m pip install tomli
RUN apt-get update && apt-get install -y python3-tomli

# Get QEMU source
WORKDIR /opt
RUN git clone https://gitlab.com/qemu-project/qemu.git

# Build QEMU w/ plugins, debug, SVE/SME enabled
WORKDIR /opt/qemu
RUN ./configure --target-list=aarch64-linux-user --enable-plugins --enable-debug \
    && make -j$(nproc)

# Download ARM GNU Toolchain (official, modern - supports SVE/SME)
WORKDIR /opt
RUN wget https://developer.arm.com/-/media/Files/downloads/gnu/13.2.rel1/binrel/arm-gnu-toolchain-13.2.Rel1-x86_64-aarch64-none-linux-gnu.tar.xz && \
    tar xf arm-gnu-toolchain-13.2.Rel1-x86_64-aarch64-none-linux-gnu.tar.xz

# Add ARM cross and native GCC to PATH (you can also use /opt/gcc if you build it yourself)
ENV PATH="/opt/arm-gnu-toolchain-13.2.Rel1-x86_64-aarch64-none-linux-gnu/bin:${PATH}"
ENV PATH="/opt/qemu/build:${PATH}"

# Show QEMU and ARM GCC versions/locations (for verification)
RUN /opt/qemu/build/qemu-aarch64 --version && \
    aarch64-none-linux-gnu-gcc --version
#RUN find /opt/qemu -name 'qemu-aarch64'

# Show available plugins for QEMU
RUN ls /opt/qemu/tests/tcg/plugins/

ENTRYPOINT ["/bin/bash"]