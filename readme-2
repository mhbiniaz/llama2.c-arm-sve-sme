objdump -d run.native | grep -A 100 matmul
Next function is: foward
objdump -d run.native | awk '/<matmul>:/,/^([0-9a-f]+) <.*>:/&&$0!~/^([0-9a-f]+) <matmul>:/'

objdump -d run.native | awk '/<matmul>:/,/^([0-9a-f]+) <.*>:/&&$0!~/^([0-9a-f]+) <matmul>:/'
0000000000401290 <matmul>:
  401290:       7100009f        cmp     w4, #0x0
  401294:       5400014d        b.le    4012bc <matmul+0x2c>
  401298:       aa0003e7        mov     x7, x0
  40129c:       8b244808        add     x8, x0, w4, uxtw #2
  4012a0:       52800006        mov     w6, #0x0                        // #0
  4012a4:       7100007f        cmp     w3, #0x0
  4012a8:       5400014c        b.gt    4012d0 <matmul+0x40>
  4012ac:       b80044ff        str     wzr, [x7], #4
  4012b0:       0b0300c6        add     w6, w6, w3
  4012b4:       eb0800ff        cmp     x7, x8
  4012b8:       54ffff61        b.ne    4012a4 <matmul+0x14>  // b.any
  4012bc:       d65f03c0        ret
  4012c0:       0b0300c6        add     w6, w6, w3
  4012c4:       bc0044ff        str     s31, [x7], #4
  4012c8:       eb0800ff        cmp     x7, x8
  4012cc:       54ffff80        b.eq    4012bc <matmul+0x2c>  // b.none
  4012d0:       0f00041f        movi    v31.2s, #0x0
  4012d4:       52800000        mov     w0, #0x0                        // #0
  4012d8:       d503201f        nop
  4012dc:       d503201f        nop
  4012e0:       0b0000c4        add     w4, w6, w0
  4012e4:       25a30407        whilelt p7.s, w0, w3
  4012e8:       8b20c825        add     x5, x1, w0, sxtw #2
  4012ec:       11004000        add     w0, w0, #0x10
  4012f0:       a540bcbd        ld1w    {z29.s}, p7/z, [x5]
  4012f4:       8b24c844        add     x4, x2, w4, sxtw #2
  4012f8:       a540bc9e        ld1w    {z30.s}, p7/z, [x4]
  4012fc:       65829fdd        fmul    z29.s, p7/m, z29.s, z30.s
  401300:       65803fbd        faddv   s29, p7, z29.s
  401304:       1e3d2b  ff        fadd    s31, s31, s29
  401308:       6b00007f        cmp     w3, w0
  40130c:       54fffeac        b.gt    4012e0 <matmul+0x50>
  401310:       17ffffec        b       4012c0 <matmul+0x30>
  401314:       d503201f        nop
  401318:       d503201f        nop
  40131c:       d503201f        nop


Next: compare to scalar code 
Next: get instruction counts for scalar (using QEMU, non sve code? non sve compiled)
Next: add some sme specific instructions 

Non vectorized code: 
Apptainer> make run
gcc -O3 -o run run.c -lm
gcc -O3 -o runq runq.c -lm
Apptainer> objdump -d run | awk '/<matmul>:/,/^([0-9a-f]+) <.*>:/&&$0!~/^([0-9a-f]+) <matmul>:/'
0000000000001f90 <matmul>:
    1f90:       7100009f        cmp     w4, #0x0
    1f94:       5400070d        b.le    2074 <matmul+0xe4>
    1f98:       53027c65        lsr     w5, w3, #2
    1f9c:       aa0003e7        mov     x7, x0
    1fa0:       8b24c80a        add     x10, x0, w4, sxtw #2
    1fa4:       5100046b        sub     w11, w3, #0x1
    1fa8:       d37ceca5        lsl     x5, x5, #4
    1fac:       121e746d        and     w13, w3, #0xfffffffc
    1fb0:       1200046c        and     w12, w3, #0x3
    1fb4:       52800006        mov     w6, #0x0                        // #0
    1fb8:       0f000400        movi    v0.2s, #0x0
    1fbc:       7100007f        cmp     w3, #0x0
    1fc0:       5400052d        b.le    2064 <matmul+0xd4>
    1fc4:       7100097f        cmp     w11, #0x2
    1fc8:       54000589        b.ls    2078 <matmul+0xe8>  // b.plast
    1fcc:       8b26c844        add     x4, x2, w6, sxtw #2
    1fd0:       d2800000        mov     x0, #0x0                        // #0
    1fd4:       d503201f        nop
    1fd8:       3ce06822        ldr     q2, [x1, x0]
    1fdc:       3ce06881        ldr     q1, [x4, x0]
    1fe0:       91004000        add     x0, x0, #0x10
    1fe4:       6e22dc21        fmul    v1.4s, v1.4s, v2.4s
    1fe8:       5e0c0423        mov     s3, v1.s[1]
    1fec:       1e212800        fadd    s0, s0, s1
    1ff0:       5e140422        mov     s2, v1.s[2]
    1ff4:       5e1c0421        mov     s1, v1.s[3]
    1ff8:       1e232800        fadd    s0, s0, s3
    1ffc:       1e222800        fadd    s0, s0, s2
    2000:       1e212800        fadd    s0, s0, s1
    2004:       eb0000bf        cmp     x5, x0
    2008:       54fffe81        b.ne    1fd8 <matmul+0x48>  // b.any
    200c:       2a0d03e0        mov     w0, w13
    2010:       340002ac        cbz     w12, 2064 <matmul+0xd4>
    2014:       0b0000c9        add     w9, w6, w0
    2018:       bc60d821        ldr     s1, [x1, w0, sxtw #2]
    201c:       11000404        add     w4, w0, #0x1
    2020:       937e7c08        sbfiz   x8, x0, #2, #32
    2024:       bc69d842        ldr     s2, [x2, w9, sxtw #2]
    2028:       1f010040        fmadd   s0, s2, s1, s0
    202c:       6b04007f        cmp     w3, w4
    2030:       540001ad        b.le    2064 <matmul+0xd4>
    2034:       0b0400c4        add     w4, w6, w4
    2038:       8b080028        add     x8, x1, x8
    203c:       11000800        add     w0, w0, #0x2
    2040:       bc64d842        ldr     s2, [x2, w4, sxtw #2]
    2044:       bd400501        ldr     s1, [x8, #4]
    2048:       1f010040        fmadd   s0, s2, s1, s0
    204c:       6b00007f        cmp     w3, w0
    2050:       540000ad        b.le    2064 <matmul+0xd4>
    2054:       0b0000c0        add     w0, w6, w0
    2058:       bd400902        ldr     s2, [x8, #8]
    205c:       bc60d841        ldr     s1, [x2, w0, sxtw #2]
    2060:       1f010040        fmadd   s0, s2, s1, s0
    2064:       0b0300c6        add     w6, w6, w3
    2068:       bc0044e0        str     s0, [x7], #4
    206c:       eb0a00ff        cmp     x7, x10
    2070:       54fffa41        b.ne    1fb8 <matmul+0x28>  // b.any
    2074:       d65f03c0        ret
    2078:       52800000        mov     w0, #0x0                        // #0
    207c:       17ffffe6        b       2014 <matmul+0x84>

0000000000002080 <forward>:

vectorized code part: 
4012e4:   25a30407        whilelt p7.s, w0, w3
4012e8:   8b20c825        add     x5, x1, w0, sxtw #2
4012ec:   11004000        add     w0, w0, #0x10
4012f0:   a540bcbd        ld1w    {z29.s}, p7/z, [x5]
4012f4:   8b24c844        add     x4, x2, w4, sxtw #2
4012f8:   a540bc9e        ld1w    {z30.s}, p7/z, [x4]
4012fc:   65829fdd        fmul    z29.s, p7/m, z29.s, z30.s
401300:   65803fbd        faddv   s29, p7, z29.s
401304:   1e3d2bff        fadd    s31, s31, s29